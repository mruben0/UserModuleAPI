// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserModuleApi.Infrastracture;

namespace UserModuleApi.Migrations
{
    [DbContext(typeof(UserModuleDBContext))]
    partial class UserModuleDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UserModuleApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BirthDate")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adress = "Yerevan",
                            BirthDate = 1998,
                            Created = new DateTime(2020, 3, 1, 23, 52, 12, 130, DateTimeKind.Local).AddTicks(544),
                            Info = "Doc",
                            IsActive = true,
                            Name = "Ruben",
                            UserName = "Ruben@gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            Adress = "Alaverdi",
                            BirthDate = 2001,
                            Created = new DateTime(2020, 3, 1, 23, 52, 12, 131, DateTimeKind.Local).AddTicks(846),
                            Info = "Custom",
                            IsActive = true,
                            Name = "Mukuch",
                            UserName = "Mko@gmail.com"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
